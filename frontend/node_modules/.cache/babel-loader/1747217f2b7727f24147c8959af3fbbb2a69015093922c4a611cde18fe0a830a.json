{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lina\\\\jobbanglinaines\\\\frontend\\\\src\\\\components\\\\MesAnnonces\\\\MesAnnonces.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { EmploiList } from \"../../data/emploi\"; // Assurez-vous que le chemin est correct\n\nimport \"./MesAnnonces.css\"; // Assurez-vous que ce fichier existe\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MesAnnonces = ({\n  connectedEmployerEmail\n}) => {\n  _s();\n  const [emplois, setEmplois] = useState(EmploiList); // État pour gérer la liste des emplois\n\n  const handleDelete = emploiToDelete => {\n    setEmplois(emplois.filter(emploi => emploi !== emploiToDelete)); // Supprime l'emploi de la liste\n  };\n\n  // Filtrer les emplois selon l'employeur connecté\n\n  const filteredEmploiList = emplois.filter(emploi => emploi.email_employeur === connectedEmployerEmail);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"lmj-emploi-list\",\n      children: filteredEmploiList.length > 0 ? filteredEmploiList.map(emploi => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emploi-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"jobTitle\",\n          children: emploi.nom_poste\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"jobEntreprise\",\n          children: emploi.nom_entreprise\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"jobSector\",\n          children: emploi.categorie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"jobSalary\",\n          children: emploi.salaire\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"jobLocation\",\n          children: emploi.emplacement\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"buttonx\",\n            onClick: () => handleDelete(emploi),\n            children: \"Supprimer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)]\n      }, emploi.nom_poste, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Aucune offre d'emploi disponible.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(MesAnnonces, \"3ZZqcYXzH21pq9yAbLWJNgZ8UOs=\");\n_c = MesAnnonces;\nexport default MesAnnonces;\nvar _c;\n$RefreshReg$(_c, \"MesAnnonces\");","map":{"version":3,"names":["React","useState","EmploiList","jsxDEV","_jsxDEV","MesAnnonces","connectedEmployerEmail","_s","emplois","setEmplois","handleDelete","emploiToDelete","filter","emploi","filteredEmploiList","email_employeur","children","className","length","map","nom_poste","fileName","_jsxFileName","lineNumber","columnNumber","nom_entreprise","categorie","salaire","emplacement","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Lina/jobbanglinaines/frontend/src/components/MesAnnonces/MesAnnonces.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { EmploiList } from \"../../data/emploi\"; // Assurez-vous que le chemin est correct\r\n\r\nimport \"./MesAnnonces.css\"; // Assurez-vous que ce fichier existe\r\n\r\nconst MesAnnonces = ({ connectedEmployerEmail }) => {\r\n  const [emplois, setEmplois] = useState(EmploiList); // État pour gérer la liste des emplois\r\n\r\n  const handleDelete = (emploiToDelete) => {\r\n    setEmplois(emplois.filter((emploi) => emploi !== emploiToDelete)); // Supprime l'emploi de la liste\r\n  };\r\n\r\n  // Filtrer les emplois selon l'employeur connecté\r\n\r\n  const filteredEmploiList = emplois.filter(\r\n    (emploi) => emploi.email_employeur=== connectedEmployerEmail\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"lmj-emploi-list\">\r\n        {filteredEmploiList.length > 0 ? (\r\n          filteredEmploiList.map((emploi) => (\r\n            <div className=\"emploi-container\" key={emploi.nom_poste}>\r\n              <h3 className=\"jobTitle\">{emploi.nom_poste}</h3>\r\n              <span className=\"jobEntreprise\">{emploi.nom_entreprise}</span>\r\n              <span className=\"jobSector\">{emploi.categorie}</span>\r\n              <span className=\"jobSalary\">{emploi.salaire}</span>\r\n              <span className=\"jobLocation\">{emploi.emplacement}</span>\r\n              <div className=\"button-container\">\r\n                <button\r\n                  className=\"buttonx\"\r\n                  onClick={() => handleDelete(emploi)}\r\n                >\r\n                  Supprimer\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <li>Aucune offre d'emploi disponible.</li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MesAnnonces;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}